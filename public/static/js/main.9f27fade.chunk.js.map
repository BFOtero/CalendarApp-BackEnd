{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/strToDate.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/calendar-messages.js","actions/ui.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","components/ui/Navbar.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRouter.js","routers/PublicRouter.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalState","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","event","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","strToDate","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventDeleted","eventLoaded","eventUpdated","startLogout","dispatch","clear","logout","checkingFinish","login","user","useForm","useState","formValue","setFormValue","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","rName","rEmail","rPassword","rPasswordConfirm","formRegisterValues","handleRegisterImputChange","lEmail","lPassword","formLoginValues","handleLoginImputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","modalOpen","customStyles","content","top","left","rigth","bottom","marginRigth","transform","Modal","setAppElement","startDate","minutes","seconds","add","endDate","title","note","CalendarModal","useSelector","isValid","setIsValid","dateStart","setDateStart","dateEnd","setDateEnd","formValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","startMoment","endMoment","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","autoComplete","rows","CalendarEvent","Navbar","onClick","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRouter","isAutenticated","Component","component","rest","props","to","PublicRouter","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f27fade.chunk.js","sourcesContent":["export const types = {\r\n    \r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clean note active',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n    eventLogout: '[event] Event logout',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = { \r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\n\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin: \r\n            return {\r\n                ...state, \r\n                ...action.payload,\r\n                checking:false\r\n            }\r\n\r\n        case types.authCheckingFinish: \r\n            return { \r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout: \r\n        return { \r\n            checking: false\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","\r\nimport { types } from \"../types/types\";\r\n\r\n// { \r\n//     id: 123, \r\n//     title: 'cumple de mi mama',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours' ).toDate(), \r\n//     user:{ \r\n//         _id: '123',\r\n//         name: 'Cristobal'\r\n//     }\r\n// }\r\n\r\nconst initialState = { \r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action) => { \r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive: \r\n            return{ \r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew: \r\n            return{ \r\n                ...state, \r\n                events: [\r\n                    ...state.events,\r\n                    action.payload \r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent: \r\n            return{ \r\n                ...state,      \r\n                activeEvent: null\r\n            }    \r\n\r\n        case types.eventUpdated:\r\n            return{ \r\n                ...state, \r\n                events: state.events.map( \r\n                    e => (e.id === action.payload.event.id) ? action.payload.event : e \r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted: \r\n            return{ \r\n                ...state,\r\n                events: state.events.filter( \r\n                    e => e.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded: \r\n            return { \r\n                ...state, \r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout: \r\n        return{ \r\n            ...initialState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    modalState: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => { \r\n\r\n    switch (action.type) { \r\n\r\n        case types.uiOpenModal: \r\n\r\n            return{\r\n                ...state,\r\n                modalState: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n\r\n            return {\r\n                ...state,\r\n                modalState: false\r\n            }\r\n\r\n        default : \r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducer = combineReducers({ \r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore( \r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method='GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`; \r\n    \r\n    if( method === 'GET'){ \r\n        return fetch(url);\r\n    } else { \r\n        return fetch( url, {\r\n            method, \r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchWithToken = ( endpoint, data, method='GET' ) => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`; \r\n    \r\n    const token = localStorage.getItem('token') || '';\r\n    \r\n    if( method === 'GET'){ \r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else { \r\n        return fetch( url, {\r\n            method, \r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport { \r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","import moment from \"moment\"\r\n\r\n\r\nexport const strToDate = ( events = [] ) => {\r\n\r\n    return events.map(event => ({\r\n        ...event, \r\n        end: moment(event.end).toDate(),\r\n        start: moment(event.start).toDate(),\r\n    }))\r\n}\r\n\r\n\r\n\r\n","\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\"\r\nimport { strToDate } from \"../helpers/strToDate\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async( dispatch, getState ) => { \r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const data = await resp.json()\r\n    \r\n            if( data.ok ){ \r\n                event.id = data.events.id\r\n                event.user = { \r\n                    _id: uid, \r\n                    name: name\r\n                }\r\n               \r\n\r\n                dispatch( eventAddNew( event ))\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = ( event ) => ({ \r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({ \r\n    type: types.eventClearActiveEvent,    \r\n})\r\n\r\n\r\nexport const eventStartDeleted = () => {\r\n\r\n    return async (dispatch, getState)=> {\r\n\r\n        const { id } = getState().calendar.activeEvent\r\n       \r\n        try{\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const data = await resp.json()\r\n          \r\n            if( data.ok){ \r\n                dispatch(eventDeleted())\r\n            }else{ \r\n                Swal.fire('Error', data.msg, 'error')\r\n            }\r\n\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try{\r\n            const resp = await fetchWithToken('events');\r\n            const data = await resp.json()\r\n            const events =  strToDate(data.event);\r\n            dispatch(eventLoaded(events))\r\n\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n\r\n        try{\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const data = await resp.json()\r\n            const events =  strToDate(data.event);\r\n\r\n            if( data.ok){ \r\n                dispatch(eventUpdated(events))\r\n            }else{ \r\n                Swal.fire('Error', data.msg, 'error')\r\n            }\r\n\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n}\r\nconst eventUpdated = (events) => ({\r\n    type: types.eventUpdated,\r\n    payload: events\r\n})\r\n\r\n\r\nexport const eventLogout = () => ({ \r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n        const data = await resp.json();\r\n\r\n        if( data.ok){ \r\n            localStorage.setItem('token', data.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: data.uid,\r\n                name: data.name\r\n            }))\r\n    \r\n        }else { \r\n            Swal.fire('Error', data.msg, 'error')\r\n        }\r\n\r\n     \r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = ( name, email, password) => {\r\n\r\n    return async(dispatch)=> {\r\n\r\n        const resp = await fetchWithoutToken( 'auth/register', { name, email, password }, 'POST')\r\n        const data = await resp.json();\r\n\r\n        if( data.ok){ \r\n            localStorage.setItem('token', data.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: data.uid,\r\n                name: data.name\r\n            }))\r\n            Swal.fire('Hurra!!! ', data.msg, 'success')\r\n        }else { \r\n            Swal.fire('Error', data.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startCheking = () => {\r\n\r\n    return async(dispatch)=> {\r\n\r\n        const resp = await fetchWithToken( 'auth/renew')\r\n        const data = await resp.json();\r\n\r\n        if( data.ok){ \r\n            localStorage.setItem('token', data.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch(login({\r\n                uid: data.uid,\r\n                name: data.name\r\n            }))\r\n        }else { \r\n            dispatch(checkingFinish())\r\n        }\r\n\r\n    }\r\n    \r\n}\r\nexport const startLogout = () => {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(logout())\r\n        dispatch(eventLogout())\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish});\r\n\r\nconst login = ( user ) => ({\r\n    type:types.authLogin,\r\n    payload: user\r\n})\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = '' ) => {\r\n\r\n    const [formValue, setFormValue] = useState(initialState)\r\n\r\n\r\n    const reset = () => {\r\n        setFormValue(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        return setFormValue({\r\n            ...formValue, \r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return  [\r\n        formValue, \r\n        handleInputChange,\r\n        setFormValue,\r\n        reset\r\n    ]\r\n}\r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const [formRegisterValues, handleRegisterImputChange ] = useForm({\r\n        rName: 'Cristobal',\r\n        rEmail: 'knegro15@hotmail.com',\r\n        rPassword: 'contrasenha',\r\n        rPasswordConfirm: 'contrasenha'\r\n    })\r\n    const [formLoginValues, handleLoginImputChange ] = useForm({\r\n        lEmail: 'Papamono@hotmail.com',\r\n        lPassword: 'qsefthuko'\r\n    })\r\n\r\n    const { lEmail, lPassword } = formLoginValues\r\n    const { rName, rEmail, rPassword, rPasswordConfirm } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const handleRegister = (e) =>{ \r\n        e.preventDefault()\r\n        if( rPassword !== rPasswordConfirm ){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error' )\r\n        }\r\n\r\n        dispatch(startRegister( rName, rEmail, rPassword ))\r\n   \r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Login</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginImputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginImputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rName'\r\n                                value={rName}\r\n                                onChange={handleRegisterImputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterImputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword\"\r\n                                value={rPassword}\r\n                                onChange={handleRegisterImputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPasswordConfirm\"\r\n                                value={rPasswordConfirm}\r\n                                onChange={handleRegisterImputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import { types } from \"../types/types\";\r\n\r\n\r\nexport const modalClose = () => ({\r\n    type:types.uiCloseModal\r\n})\r\n\r\nexport const modalOpen = () => ({\r\n    type:types.uiOpenModal\r\n})","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es-mx'\r\n\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Modal from 'react-modal';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { modalClose } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = { \r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        rigth: 'auto', \r\n        bottom: 'auto',\r\n        marginRigth: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst startDate = moment().minutes(0).seconds(0).add(1, 'hours')\r\nconst endDate = moment().minutes(0).seconds(0).add(2, 'hours')\r\n\r\nconst initialState = { \r\n    title: '',\r\n    note: '',\r\n    start: startDate.toDate(),\r\n    end: endDate.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const [ isValid, setIsValid] = useState(true)\r\n    const [ dateStart, setDateStart ] = useState( startDate.toDate())\r\n    const [ dateEnd, setDateEnd ] = useState( endDate.toDate())\r\n    \r\n    const [ formValues, handleInputChange, setFormValue, reset ] = useForm( initialState )\r\n\r\n    useEffect(() => { \r\n        if( activeEvent ){ \r\n            setFormValue( activeEvent )\r\n        }else{ \r\n            setFormValue( initialState )\r\n        }\r\n    }, [activeEvent, setFormValue])\r\n\r\n    const dispatch = useDispatch();\r\n    const {modalState} = useSelector(state => state.ui)\r\n\r\n    const { title, note, start, end } = formValues\r\n\r\n    const closeModal = () => {\r\n        reset()\r\n        dispatch( modalClose() )\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => { \r\n        setDateStart(e)\r\n        setFormValue({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd(e)\r\n        setFormValue({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const startMoment = moment( start )\r\n        const endMoment = moment( end )\r\n        \r\n        if( startMoment.isSameOrAfter(endMoment) ){\r\n            return Swal.fire( 'Error', 'La fecha fin debe de ser mayor a la fecha inicio', 'error');\r\n        }\r\n\r\n        if( title.trim().length < 2 ){\r\n            return setIsValid(false)\r\n        }\r\n\r\n        if ( !!activeEvent ){\r\n            dispatch( eventStartUpdate(formValues) )\r\n        } else { \r\n            dispatch( eventStartAddNew(formValues))\r\n        }\r\n        \r\n        setIsValid(true)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalState}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            {\r\n                activeEvent \r\n                ? <h1> Editar Evento </h1> \r\n                : <h1> Nuevo evento </h1>\r\n                \r\n            }\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange } \r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                    />                \r\n                </div>\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className= { `form-control ${ !isValid && 'is-invalid'}` }\r\n                        placeholder=\"Título del evento\"\r\n                        value={title}\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        onChange={ handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        value={ note }\r\n                        rows=\"5\"\r\n                        name=\"note\"\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <br/>\r\n            <span>-{user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nconst Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark\">\r\n            \r\n            <span className=\"navbar-brand \">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-primary\"\r\n                onClick={ () => dispatch(startLogout())}    \r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { modalOpen } from '../../actions/ui'\r\n\r\n\r\nconst AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    return (\r\n        <button \r\n            className = \"btn btn-primary fab\"\r\n            onClick = { () => dispatch(modalOpen()) }\r\n        > \r\n        <i className = \"fas fa-plus\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddNewFab\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDeleted } from '../../actions/events'\r\nconst DeleteEventFab = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n    return (\r\n        <button\r\n            className=\" btn btn-outline-danger fab-danger\"\r\n            onClick={ () => dispatch( eventStartDeleted() )}\r\n        >\r\n            <i className=\"fas fa-trash\" />\r\n            <span> Borrar</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es-mx'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { CalendarEvent } from './CalendarEvent';\r\n\r\nimport Navbar from '../ui/Navbar'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { modalOpen } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport AddNewFab from '../ui/AddNewFab';\r\nimport DeleteEventFab from '../ui/DeleteEventFab';\r\n\r\nconst localizer = momentLocalizer(moment)    \r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView')||'month' )\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n    \r\n    const onDoubleClick = (e) =>{\r\n        dispatch(modalOpen())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive(e) )\r\n        \r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    useEffect (() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#343a40':'#465660',\r\n            borderRadius: '30px',\r\n            opacity: 1, \r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\".calendar-screen\">\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"    \r\n                messages={messages}   \r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            \r\n            <AddNewFab/>\r\n            {\r\n                activeEvent&& <DeleteEventFab/>\r\n            }\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nconst PrivateRouter = ({\r\n    isAutenticated, \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) =>(\r\n                (isAutenticated)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/login\"/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRouter\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nconst PublicRouter = ({\r\n    isAutenticated, \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route  \r\n            {...rest}\r\n            component={(props) =>(\r\n                (!isAutenticated)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/\"/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\nexport default PublicRouter\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, \r\n    Redirect\r\n} from 'react-router-dom'\r\nimport { startCheking } from '../actions/auth'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport PrivateRouter from './PrivateRouter'\r\nimport PublicRouter from './PublicRouter'\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(startCheking())\r\n\r\n    }, [dispatch])\r\n\r\n    if( checking ) { \r\n        return ( <h5> espera...</h5>)\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRouter exact path='/login' isAutenticated={ !!uid } component={LoginScreen} />\r\n                    <PrivateRouter exact path='/' isAutenticated={ !!uid } component={CalendarScreen} />\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n  <CalendarApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}